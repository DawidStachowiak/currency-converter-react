{"version":3,"sources":["Container/index.js","Form/index.js","Form/currencies/index.js","Result/index.js","Clock/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Form","currencies","calculateResult","useState","amount","setAmount","name","selectedCurrency","setSelectedCurrency","onSubmit","event","preventDefault","onReset","placeholder","type","min","value","required","onChange","target","map","currency","id","price","Result","result","undefined","targetAmount","toFixed","Clock","Date","time","setTime","newDate","currentDate","toLocaleDateString","weekday","day","month","year","useEffect","intervalId","setInterval","prevTime","clearInterval","toLocaleTimeString","App","setResult","rate","find","sourceAmount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.013e7c5c.chunk.js","sourcesContent":["import \"./style.css\";\r\nconst Container = ({ children }) => (\r\n    <div className=\"container\">\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Container;","import \"./style.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Form = ({ currencies, calculateResult }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [selectedCurrency, setSelectedCurrency] = useState(currencies[0].name);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(amount, selectedCurrency);\r\n  };\r\n\r\n  const onReset = () =>{\r\n      setAmount (\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmit} onReset={onReset}>\r\n      <fieldset>\r\n        <legend>Kalkulator walut</legend>\r\n\r\n        <label className=\"form__label\">Wpisz kwotę w PLN</label>\r\n\r\n        <input\r\n          className=\"form__input\"\r\n          placeholder=\"wpisz kwotę\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          value={amount}\r\n          required\r\n          onChange={({ target }) => setAmount(target.value)}\r\n        />\r\n      </fieldset>\r\n\r\n      <fieldset>\r\n        <label className=\"form__label\">Wybierz walutę</label>\r\n\r\n        <select\r\n          className=\"form__select\"\r\n          value={selectedCurrency}\r\n          onChange={({ target }) => setSelectedCurrency(target.value)}\r\n        >\r\n          {currencies.map((currency) => (\r\n            <option key={currency.id} value={currency.name}>\r\n              {currency.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </fieldset>\r\n\r\n      <button className=\"form__button\" type=\"submit\">\r\n        Przelicz\r\n      </button>\r\n      <button className=\"form__button\" type=\"reset\">\r\n        Wyczyść formularz\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","\nexport const currencies = [\n    { id: \"USD\", price: 4.56, name: \"Dolar amerykański-USD\", },\n    { id: \"EUR\", price: 4.56, name: \"Euro-EUR\", },\n    { id: \"GBP\", price: 5.24, name: \"Funt szterling-GBP\", },\n    { id: \"SEK\", price: 3.77, name: \"Korona szwedzka-SEK\", },\n    { id: \"CHF\", price: 4.15, name: \"Frank szwajcarski-CHF\", },\n];\n\n\n\n","import \"./style.css\";\r\nimport React from \"react\";\r\nconst Result = ({ result }) => (\r\n  <div className=\"form__resultBox\">\r\n    {result !== undefined && (\r\n      <p className=\"form__resultParagraph\">\r\n        Wynik: &nbsp;{result.targetAmount.toFixed(2)}&nbsp;\r\n        {result.selectedCurrency}\r\n      </p>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Result;\r\n","import \"./style.css\";\nimport { useState, useEffect } from \"react\";\n\nexport const Clock = () => {\n  const [time, setTime] = useState(new Date());\n  const newDate = new Date();\n  const currentDate = newDate.toLocaleDateString(undefined, {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  });\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTime((prevTime) => prevTime + 1);\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [time]);\n  return (\n    <p className=\"date__time\">\n      Dziś jest {currentDate}, {newDate.toLocaleTimeString()}\n    </p>\n  );\n};\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport { currencies } from \"./Form/currencies\";\nimport Result from \"./Result\";\nimport { Clock } from \"./Clock\";\nfunction App() {\n  const [result, setResult] = useState();\n\n  const calculateResult = (amount, selectedCurrency) => {\n    const rate = currencies.find(({ name }) => name === selectedCurrency).price;\n\n    setResult({\n      sourceAmount: +amount,\n      targetAmount: amount / rate,\n      selectedCurrency,\n    });\n  };\n  return (\n    <Container>\n      <Clock />\n      <Form currencies={currencies} calculateResult={calculateResult} />\n      <Result result={result} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}