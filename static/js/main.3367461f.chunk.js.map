{"version":3,"sources":["Container/styled.js","Container/index.js","Result/styled.js","Result/index.js","Form/styled.js","Form/index.js","useDataRates.js","Clock/useCurrentDate.js","Clock/styled.js","Clock/index.js","App.js","reportWebVitals.js","GlobalStyles.js","index.js","theme.js"],"names":["Wrapper","styled","div","Container","children","ResultParagraph","p","ResultWrapper","theme","colors","mariner","twilightBlue","Result","result","undefined","targetAmount","toFixed","selectedCurrency","FormWrapper","form","dodgerBlue","FormInput","input","desertStorm","cornflowerBlue","FormFieldset","fieldset","FormLabel","label","midnightBlue","FormButton","button","steelBlue","wildSand","indigo","FormLegend","legend","blackOlive","FormSelect","select","Error","LoadingData","Form","ratesData","useState","status","setRatesData","useEffect","setTimeout","a","fetch","response","ok","statusText","json","rates","date","state","useDataRates","setResult","setSelectedCurrency","amount","setAmount","onSubmit","event","preventDefault","rate","sourceAmount","calculateResult","placeholder","type","min","value","required","onChange","target","Object","keys","map","useCurrentDate","Date","setDate","currentDate","toLocaleDateString","weekday","day","month","year","hour","minute","second","intervalId","setInterval","clearInterval","ClockContainer","yellow","Clock","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","white","document","getElementById"],"mappings":"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","file":"static/js/main.3367461f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  -webkit-box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\n    5px 5px 1px 5px rgba(0, 0, 0, 0);\n  box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\n    5px 5px 1px 5px rgba(0, 0, 0, 0);\n  padding: 20px;\n  margin-top: 15px;\n`;\n","import {Wrapper} from  \"./styled\";\r\nconst Container = ({ children }) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\n\nexport const ResultParagraph = styled.p`\n  font-size: 18px;\n  font-family: \"Lato\", sans-serif;\n  text-align: center;\n  padding-top: 30px;\n`;\n\nexport const ResultWrapper = styled.div`\n  border-color: ${({ theme }) => theme.colors.mariner};\n  border-radius: 3px;\n  margin-top: 15px;\n  margin-bottom: 20px;\n  background-color: ${({ theme }) => theme.colors.twilightBlue};\n  height: 80px;\n`;\n\nexport const setCurrentDay = styled.p`\n  color: ${({ theme }) => theme.colors.twilightBlue};\n  margin-top: 15px;\n  margin-bottom: 20px;\n  font-size:15px;\n`;\n","import { ResultParagraph, ResultWrapper, setCurrentDay } from \"./styled\";\r\nimport React from \"react\";\r\nconst Result = ({ result }) => (\r\n  <ResultWrapper>\r\n    {result !== undefined && (\r\n      <ResultParagraph>\r\n        <setCurrentDay>Kursy ładowane są na aktualny dzień</setCurrentDay>\r\n        Wynik: &nbsp;{result.targetAmount.toFixed(2)}&nbsp;\r\n        {result.selectedCurrency}&nbsp;\r\n      </ResultParagraph>\r\n    )}\r\n  </ResultWrapper>\r\n);\r\n\r\nexport default Result;\r\n","import styled from \"styled-components\";\n\nexport const FormWrapper = styled.form`\n  color: ${({ theme }) => theme.colors.dodgerBlue};\n  text-align: center;\n  width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  padding: 10px;\n  background-color: ${({ theme }) => theme.colors.desertStorm};\n  border-color: ${({ theme }) => theme.colors.cornflowerBlue};\n  max-width: 350px;\n  border-radius: 4px;\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const FormFieldset = styled.fieldset`\n  border-color: ${({theme})=>theme.colors.mariner};\n  border-radius: 3px;\n  margin-top: 15px;\n  margin-bottom: 20px;\n  background-color: ${({ theme }) => theme.colors.twilightBlue};\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 18px;\n  display: inline-block;\n  max-width: 300px;\n  width: 100%;\n  font-size: 18px;\n  color: ${({ theme }) => theme.colors.midnightBlue};\n  margin-left: 15px;\n  margin-top: 10px;\n  margin-right: 15px;\n`;\n\nexport const FormButton = styled.button`\n  width: 100%;\n  border: none;\n  padding: 15px;\n  background-color: ${({ theme }) => theme.colors.steelBlue};\n  color: ${({ theme }) => theme.colors.wildSand};\n  margin-top: 15px;\n  font-family: \"Lato\", sans-serif;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.indigo};\n  }\n`;\n\nexport const FormLegend = styled.legend`\n  background-color: ${({ theme }) => theme.colors.blackOlive};\n  border-radius: 3px;\n  padding: 5px;\n  border: 1px solid ${({ theme }) => theme.colors.steelBlue};\n  font-size: 18px;\n  color: ${({ theme }) => theme.colors.wildSand};\n  font-family: \"Lato\", sans-serif;\n`;\n\nexport const FormSelect = styled.select`\n  padding: 10px;\n  background-color: ${({ theme }) => theme.colors.steelBlue};\n  border-color: ${({theme})=>theme.colors.mariner};\n  max-width: 350px;\n  border-radius: 4px;\n  width: 100%;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  color: ${({ theme }) => theme.colors.wildSand};\n  font-family: \"Lato\", sans-serif;\n`;\n\nexport const Error = styled.p`\ncolor: ${({theme})=>theme.colors.mariner};\n`;\n\nexport const LoadingData = styled.p`\ncolor: ${({theme})=>theme.colors.mariner};\n`;","import { useState } from \"react\";\r\nimport Result from \"../Result\";\r\nimport {\r\n  FormWrapper,\r\n  FormInput,\r\n  FormFieldset,\r\n  FormLabel,\r\n  FormButton,\r\n  FormLegend,\r\n  FormSelect,\r\n  LoadingData,\r\n  Error,\r\n} from \"./styled\";\r\nimport { useDataRates } from \"../useDataRates\";\r\n\r\nconst Form = () => {\r\n  const ratesData = useDataRates();\r\n  \r\n\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = (amount, selectedCurrency) => {\r\n    const rate = ratesData.rates[selectedCurrency];\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount / rate,\r\n      selectedCurrency,\r\n    });\r\n  };\r\n  const [selectedCurrency, setSelectedCurrency] = useState(\"EUR\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(amount, selectedCurrency);\r\n  };\r\n\r\n  return (\r\n    <FormWrapper onSubmit={onFormSubmit}>\r\n      {ratesData.state === \"loading\" ? (\r\n        <LoadingData>\r\n          Please wait while the data is downloaded from the Central Bank\r\n        </LoadingData>\r\n      ) : ratesData.state === \"error\" ? (\r\n        <Error>Ups... something went wrong.</Error>\r\n      ) : (\r\n        <FormFieldset>\r\n          <FormLegend>Kalkulator walut</FormLegend>\r\n\r\n          <FormLabel>Wpisz kwotę w PLN</FormLabel>\r\n\r\n          <FormInput\r\n            placeholder=\"wpisz kwotę\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            value={amount}\r\n            required\r\n            onChange={({ target }) => setAmount(target.value)}\r\n          />\r\n        </FormFieldset>\r\n      )}\r\n      <FormFieldset>\r\n        <FormLabel>Wybierz walutę</FormLabel>\r\n\r\n        <FormSelect\r\n          value={selectedCurrency}\r\n          onChange={({ target }) => setSelectedCurrency(target.value)}\r\n        >\r\n          {Object.keys(ratesData.rates).map(((selectedCurrency) => (\r\n            <option \r\n            key={selectedCurrency} \r\n            value={selectedCurrency}\r\n            >\r\n              {selectedCurrency}\r\n            </option>\r\n          )))}\r\n        </FormSelect>\r\n      </FormFieldset>\r\n      <Result result={result} />\r\n      <FormButton type=\"submit\">Przelicz</FormButton>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useEffect, useState } from \"react\";\n\nexport const useDataRates = () => {\n  const [ratesData, setRatesData] = useState({\n    status: \"loading\",\n  });\n\n  useEffect(() => {\n    const fetchRates = async () => {\n      try {\n        const response = await fetch(\n          \"https://api.exchangerate.host/latest?base=PLN\"\n        );\n\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const {rates, date} = await response.json();\n\n        setRatesData({\n          state: \"success\",\n          date,\n          rates,\n        });\n      } catch {\n        setRatesData({\n          state: \"error\",\n        });\n      }\n    };\n    setTimeout(fetchRates, 2000);\n  }, []);\n\n  return ratesData;\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n  const [date, setDate] = useState(new Date());\n  const currentDate = date.toLocaleDateString(undefined, {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n  });\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return currentDate;\n};\n","import styled from \"styled-components\";\n\nexport const ClockContainer = styled.p`\n  text-align: right;\n  color: ${({theme})=>theme.colors.yellow};\n  font-family: \"Roboto\", sans-serif;\n  margin-right: 2px;\n`;\n","import { useCurrentDate} from \"./useCurrentDate\";\nimport { ClockContainer } from \"./styled\";\n\nexport const Clock = () => {\n const date =  useCurrentDate();\n\n return (\n  <ClockContainer>\n    Dzisiaj jest \n    {\" \"}\n    {useCurrentDate(date)}\n    </ClockContainer>\n);\n};\n","import \"./App.css\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport { Clock } from \"./Clock\";\n\nfunction App() {\n  \n  return (\n    <Container>\n      <Clock />\n      <Form />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize}\n  \n  html {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n  font-family: 'Robo Slab', serif;\n  margin: 0 auto;\n  background-color: rgb(43, 41, 41);\n  background-size: cover;\n  background-attachment: fixed;\n  background-position: center;\n  background-image: url(\"../src/images/pageBackground.png\");\n}\n`;","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyles';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme.js';\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <GlobalStyle/>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n  colors: {\n    white: \"#1F0000\",\n    dodgerBlue: \"#4786FA\",\n    desertStorm: \"#F1F1EE\",\n    cornflowerBlue: \"#4682EE\",\n    twilightBlue: \"#FBFFFF\",\n    midnightBlue: \"#191970\",\n    steelBlue: \"#4682B4\",\n    wildSand: \"#F5F5F5\",\n    blackOlive: \"#242E16\",\n    indigo: \"#4682C8\",\n    mariner: \"#1E5BE0\",\n    yellow: \"#FDFF00\",\n  }\n};\n"],"sourceRoot":""}