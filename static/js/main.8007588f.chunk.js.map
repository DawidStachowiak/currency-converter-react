{"version":3,"sources":["Container/styled.js","Container/index.js","Form/styled.js","Form/index.js","Form/currencies/index.js","Result/styled.js","Result/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Container","children","FormWrapper","form","FormInput","input","FormFieldset","fieldset","FormLabel","label","FormButton","button","FormLegend","legend","FormSelect","select","Form","currencies","calculateResult","useState","amount","setAmount","name","selectedCurrency","setSelectedCurrency","onSubmit","event","preventDefault","onReset","result","placeholder","type","min","value","required","onChange","target","map","currency","id","price","ResultParagraph","p","ResultWrapper","Result","undefined","targetAmount","toFixed","ClockContainer","Clock","date","Date","setDate","currentDate","toLocaleDateString","weekday","day","month","year","hour","minute","second","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","App","setResult","rate","find","sourceAmount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8007588f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  -webkit-box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\n    5px 5px 1px 5px rgba(0, 0, 0, 0);\n  box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\n    5px 5px 1px 5px rgba(0, 0, 0, 0);\n  padding: 20px;\n  margin-top: 15px;\n`;\n","import {Wrapper} from  \"./styled\";\r\nconst Container = ({ children }) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\n\nexport const FormWrapper = styled.form`\n  color: rgb(71, 134, 250);\n  text-align: center;\n  width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  padding: 10px;\n  background-color: rgb(241, 241, 238);\n  border-color: rgb(70, 130, 180);\n  max-width: 350px;\n  border-radius: 4px;\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const FormFieldset = styled.fieldset`\n  border-color: rgb(30, 91, 224);\n  border-radius: 3px;\n  margin-top: 15px;\n  margin-bottom: 20px;\n  background-color: rgb(251, 255, 255);\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 18px;\n  color: hsl(0, 76%, 59%);\n  display: inline-block;\n  max-width: 300px;\n  width: 100%;\n  font-size: 18px;\n  color: midnightblue;\n  margin-left: 15px;\n  margin-top: 10px;\n  margin-right: 15px;\n`;\n\nexport const FormButton = styled.button`\n  width: 100%;\n  border: none;\n  padding: 15px;\n  background-color: rgb(70, 130, 180);\n  color: hsl(0, 0%, 96%);\n  margin-top: 15px;\n  font-family: \"Lato\", sans-serif;\n\n  &:hover{\n    background-color: rgb(69, 132, 248);\n  }\n`;\n\nexport const FormLegend = styled.legend`\nbackground-color: rgb(70, 130, 180);\n  border-radius: 3px;\n  padding: 5px;\n  border: 1px solid rgb(70, 130, 180);\n  font-size: 18px;\n  color: hsl(0, 0%, 96%);\n  font-family: \"Lato\", sans-serif;\n`;\n\nexport const FormSelect = styled.select`\npadding: 10px;\nbackground-color: rgb(70, 130, 180);\nborder-color: rgb(30, 91, 224);\nmax-width: 350px;\nborder-radius: 4px;\nwidth: 100%;\nmargin-top: 20px;\nmargin-bottom: 20px;\ncolor: hsl(0, 0%, 96%);\nfont-family: \"Lato\", sans-serif;\n`\n;","import { useState } from \"react\";\r\nimport {\r\n  FormWrapper,\r\n  FormInput,\r\n  FormFieldset,\r\n  FormLabel,\r\n  FormButton,\r\n  FormLegend,\r\n  FormSelect,\r\n} from \"./styled\";\r\n\r\n\r\nconst Form = ({ currencies, calculateResult }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [selectedCurrency, setSelectedCurrency] = useState(currencies[0].name);\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(amount, selectedCurrency);\r\n  };\r\n\r\n  const onReset = (result) => {\r\n    setAmount(\"\");\r\n    \r\n  };\r\n\r\n  return (\r\n    <FormWrapper onSubmit={onFormSubmit} onReset={onReset}>\r\n      <FormFieldset>\r\n        <FormLegend>Kalkulator walut</FormLegend>\r\n\r\n        <FormLabel>Wpisz kwotę w PLN</FormLabel>\r\n\r\n        <FormInput\r\n          placeholder=\"wpisz kwotę\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          value={amount}\r\n          required\r\n          onChange={({ target }) => setAmount(target.value)}\r\n        />\r\n      </FormFieldset>\r\n\r\n      <FormFieldset>\r\n        <FormLabel>Wybierz walutę</FormLabel>\r\n\r\n        <FormSelect\r\n          value={selectedCurrency}\r\n          onChange={({ target }) => setSelectedCurrency(target.value)}\r\n        >\r\n          {currencies.map((currency) => (\r\n            <option key={currency.id} value={currency.name}>\r\n              {currency.name}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </FormFieldset>\r\n\r\n      <FormButton type=\"submit\">Przelicz</FormButton>\r\n      <FormButton type=\"reset\">Wyczyść formularz</FormButton>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","\nexport const currencies = [\n    { id: \"USD\", price: 4.56, name: \"Dolar amerykański-USD\", },\n    { id: \"EUR\", price: 4.56, name: \"Euro-EUR\", },\n    { id: \"GBP\", price: 5.24, name: \"Funt szterling-GBP\", },\n    { id: \"SEK\", price: 3.77, name: \"Korona szwedzka-SEK\", },\n    { id: \"CHF\", price: 4.15, name: \"Frank szwajcarski-CHF\", },\n];\n\n\n\n","import styled from \"styled-components\";\n\nexport const ResultParagraph = styled.p`\n  font-size: 18px;\n  font-family: \"Lato\", sans-serif;\n  text-align: center;\n  padding-top: 30px;\n`;\n\nexport const ResultWrapper = styled.div`\n  border-color: rgb(30, 91, 224);\n  border-radius: 3px;\n  margin-top: 15px;\n  margin-bottom: 20px;\n  background-color: rgb(251, 255, 255);\n  height: 80px;\n`;\n","import {ResultParagraph, ResultWrapper} from \"./styled\";\r\nimport React from \"react\";\r\nconst Result = ({ result }) => (\r\n  <ResultWrapper>\r\n    {result !== undefined && (\r\n      <ResultParagraph>\r\n        Wynik: &nbsp;{result.targetAmount.toFixed(2)}&nbsp;\r\n        {result.selectedCurrency}\r\n      </ResultParagraph>\r\n    )}\r\n  </ResultWrapper>\r\n);\r\n\r\nexport default Result;\r\n","import styled from \"styled-components\";\n\nexport const ClockContainer = styled.p`\n  text-align: right;\n  color: #ffffff;\n  font-family: \"Roboto\", sans-serif;\n  margin-right: 2px;\n`;\n","import { useCurrentDate} from \"./useCurrentDate\";\nimport { ClockContainer } from \"./styled\";\n\nexport const Clock = () => {\n const date =  useCurrentDate();\n\n return (\n  <ClockContainer>Dzisiaj jest {date}</ClockContainer>\n);\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n  const [date, setDate] = useState(new Date());\n  const currentDate = date.toLocaleDateString(undefined, {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n  });\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return currentDate;\n};\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport { currencies } from \"./Form/currencies\";\nimport Result from \"./Result\";\nimport { Clock } from \"./Clock\";\nfunction App() {\n  const [result, setResult] = useState();\n\n  const calculateResult = (amount, selectedCurrency) => {\n    const rate = currencies.find(({ name }) => name === selectedCurrency).price;\n\n    setResult({\n      sourceAmount: +amount,\n      targetAmount: amount / rate,\n      selectedCurrency,\n    });\n  };\n  return (\n    <Container>\n      <Clock />\n      <Form currencies={currencies} calculateResult={calculateResult} />\n      <Result result={result} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}